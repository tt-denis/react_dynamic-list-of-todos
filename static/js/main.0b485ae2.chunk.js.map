{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedUserId","changeUserId","useState","query","setQuery","option","setOption","filterTodos","setFilterTodos","useEffect","filter","todo","title","includes","toLowerCase","completed","className","type","value","onChange","event","target","map","classNames","TodoList__item","htmlFor","id","checked","readOnly","button","userId","onClick","request","url","fetch","then","response","json","CurrentUser","clearUsers","user","setUser","getUserByID","name","email","phone","App","setSelectedUserId","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b485ae2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectedUserId: number,\n  changeUserId: (userId: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedUserId,\n  changeUserId,\n}) => {\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState('');\n  const [filterTodos, setFilterTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    setFilterTodos(todos.filter(todo => {\n      if (todo.title.includes(query.toLowerCase())) {\n        switch (option) {\n          case 'all':\n            return true;\n\n          case 'done':\n            return todo.completed;\n\n          case 'active':\n            return !todo.completed;\n\n          default:\n            return true;\n        }\n      }\n\n      return false;\n    }));\n  }, [todos, query, option]);\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <div className=\"TodoList__filter\">\n        <input\n          type=\"text\"\n          value={query}\n          onChange={event => {\n            setQuery(event.target.value);\n          }}\n        />\n        <select\n          onChange={(event) => {\n            setOption(event.target.value);\n          }}\n        >\n          <option\n            value=\"all\"\n          >\n            ALL\n          </option>\n          <option\n            value=\"done\"\n          >\n            Done\n          </option>\n          <option\n            value=\"active\"\n          >\n            Active\n          </option>\n        </select>\n      </div>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filterTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames({\n                TodoList__item: true,\n                'TodoList__item--unchecked': !todo.completed,\n                'TodoList__item--checked': todo.completed,\n              })}\n            >\n              <label htmlFor={`${todo.id}`}>\n                <input\n                  checked={todo.completed}\n                  type=\"checkbox\"\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className={classNames({\n                  'TodoList__user-button': true,\n                  button: true,\n                  'TodoList__user-button--selected': selectedUserId === todo.userId,\n                })}\n                type=\"button\"\n                onClick={() => {\n                  changeUserId(todo.userId);\n                }}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api/';\n\nexport const request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n};\n\nexport const getTodos = () => request('/todos');\n\nexport const getUserByID = (userId: number) => request(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getUserByID } from '../../api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n  clearUsers: (userId: number) => void\n};\n\nexport const CurrentUser: React.FC<Props> = ({\n  userId,\n  clearUsers,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUserByID(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      {user ? (\n        <>\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:&nbsp;\n              {userId}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n          <button\n            className=\"button button--center\"\n            type=\"button\"\n            onClick={() => clearUsers(0)}\n          >\n            Clear\n          </button>\n        </>\n      ) : (\n        <p>\n          Loading...\n        </p>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          selectedUserId={selectedUserId}\n          changeUserId={setSelectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              clearUsers={setSelectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}